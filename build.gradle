apply plugin: 'cpp' 

def opencvlibs = System.getenv("OPENCV_LIBS")
def opencvinclude = System.getenv("OPENCV_INCLUDE_DIRS")


model 
{
    repositories {
        libs(PrebuiltLibraries) {
	    opencv {
	    	headers.srcDir opencvinclude
	    }
            opencv_core {
                binaries.withType(StaticLibraryBinary) {
		    def libName = targetPlatform.operatingSystem.windows ? 'libopencv_core.lib' : 'libopencv_core.so'
                    staticLibraryFile = file("$opencvlibs/$libName")
                }
            }
	    opencv_highgui {
                binaries.withType(StaticLibraryBinary) {
		    def libName = targetPlatform.operatingSystem.windows ? 'libopencv_highgui.lib' : 'libopencv_highgui.so'
                    staticLibraryFile = file("$opencvlibs/$libName")
                }
            }
	    opencv_imgproc {
                binaries.withType(StaticLibraryBinary) {
		    def libName = targetPlatform.operatingSystem.windows ? 'libopencv_imgproc.lib' : 'libopencv_imgproc.so'
                    staticLibraryFile = file("$opencvlibs/$libName")
                }
            }
	    opencv_videoio {
                binaries.withType(StaticLibraryBinary) {
		    def libName = targetPlatform.operatingSystem.windows ? 'libopencv_videoio.lib' : 'libopencv_videoio.so'
                    staticLibraryFile = file("$opencvlibs/$libName")
                }
            }
        }
    }
	
	components {
        main(NativeExecutableSpec) {
            sources {
                cpp {
                    source {
                        srcDirs "src/main/cpp", "lib"
                        include "*.cpp"
                    }
                    exportedHeaders {
                        srcDirs "src/main/include", "include"
                    }
                }
		cpp.lib library: "opencv", linkage: "api"
		cpp.lib library: "opencv_core", linkage: 'static'
		cpp.lib library: "opencv_highgui", linkage: 'static'
		cpp.lib library: "opencv_imgproc", linkage: 'static'
		cpp.lib library: "opencv_videoio", linkage: 'static'
            }
        }
    }
}
